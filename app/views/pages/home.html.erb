<div class="container">
  <!-- navbar start -->
    <div id='top' class="navbar">
      <ul>
        <!-- <a href="#about"><li>About</li></a> -->
        <a href="#work"><li>Projects</li></a>
        <p style="color: #414042;">|</p>
        <a href="#contact"><li>Contact</li></a>
      </ul>
    </div>
  <!-- navbar end -->

  <!-- social links -->
   <div class="social">
    <ul class="wall">
      <li><a href="https://github.com/polina-drykova" target="_blank"><i class="fa fa-github"></i><span>Github</span></a></li>
      <li><a href="https://linkedin.com/in/polina-drykova" target="_blank"><i class="fa fa-linkedin"></i><span>Linked</span></li>
      <li><a href="mailto:polina.drykova1988@gmail.com" target="_blank"><i class="fa fa-envelope"></i><span>Gmail</span></li>
    </ul>
  </div>
  <!-- social links -->

  <!-- social media bar(use _social_colorful_navbar) -->
    <!-- <div class="social">
      <ul class="social-nav">
        <li class="facebook"><a href=""><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
        <li class="twitter"><a href=""><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
        <li class="google"><a href=""><i class="fa fa-google-plus" aria-hidden="true"></i></a></li>
        <li class="github"><a href=""><i class="fa fa-github" aria-hidden="true"></i></a></li>
        <li class="linked"><a href=""><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
        <li class="codepen"><a href=""><i class="fa fa-codepen" aria-hidden="true"></i></a></li>
      </ul>
    </div> -->
  <!-- social media bar -->

  <!-- Sections start -->
    <%= render 'home_section' %>
    <!-- 'about_section' -->
    <%= render 'project_section' %>
    <%= render 'contact_section' %>
  <!-- Sections end -->

  <!-- Footer -->
    <div class="footer">
      <p>Made with ♥️ and glass of wine</p>
      <a href="#home" tooltip="To Top"><i class="fa fa-chevron-circle-up wobble"></i></a>
    </div>
  <!-- Footer -->

</div>



<!-- JavaScript codes -->
  <div class="hidden-code">

    <script>
      $('.slider').each(function() {
        var $this = $(this);
        var $group = $this.find('.slide_group');
        var $slides = $this.find('.slide');
        var bulletArray = [];
        var currentIndex = 0;
        var timeout;

        function move(newIndex) {
          var animateLeft, slideLeft;

          advance();

          if ($group.is(':animated') || currentIndex === newIndex) {
            return;
          }

          bulletArray[currentIndex].removeClass('active');
          bulletArray[newIndex].addClass('active');

          if (newIndex > currentIndex) {
            slideLeft = '100%';
            animateLeft = '-100%';
          } else {
            slideLeft = '-100%';
            animateLeft = '100%';
          }

          $slides.eq(newIndex).css({
            display: 'block',
            left: slideLeft
          });
          $group.animate({
            left: animateLeft
          }, function() {
            $slides.eq(currentIndex).css({
              display: 'none'
            });
            $slides.eq(newIndex).css({
              left: 0
            });
            $group.css({
              left: 0
            });
            currentIndex = newIndex;
          });
        }

        function advance() {
          clearTimeout(timeout);
          timeout = setTimeout(function() {
            if (currentIndex < ($slides.length - 1)) {
              move(currentIndex + 1);
            } else {
              move(0);
            }
          }, 8000);
        }

        $('.next_btn').on('click', function() {
          if (currentIndex < ($slides.length - 1)) {
            move(currentIndex + 1);
          } else {
            move(0);
          }
        });

        $('.previous_btn').on('click', function() {
          if (currentIndex !== 0) {
            move(currentIndex - 1);
          } else {
            move(3);
          }
        });

        $.each($slides, function(index) {
          var $button = $('<a class="slide_btn">&bull;</a>');

          if (index === currentIndex) {
            $button.addClass('active');
          }
          $button.on('click', function() {
            move(index);
          }).appendTo('.slide_buttons');
          bulletArray.push($button);
        });

        advance();
      });
    </script>
<!-- JS for TextScramble -->

<!-- -->
       <script>
         class TextScramble {
           constructor(el) {
             this.el = el
             this.chars = '!<>-_\\/[]{}—=+*^?#________'
             this.update = this.update.bind(this)
           }
           setText(newText) {
             const oldText = this.el.innerText
             const length = Math.max(oldText.length, newText.length)
             const promise = new Promise((resolve) => this.resolve = resolve)
             this.queue = []
             for (let i = 0; i < length; i++) {
               const from = oldText[i] || ''
               const to = newText[i] || ''
               const start = Math.floor(Math.random() * 40)
               const end = start + Math.floor(Math.random() * 40)
               this.queue.push({ from, to, start, end })
             }
             cancelAnimationFrame(this.frameRequest)
             this.frame = 0
             this.update()
             return promise
           }
           update() {
             let output = ''
             let complete = 0
             for (let i = 0, n = this.queue.length; i < n; i++) {
               let { from, to, start, end, char } = this.queue[i]
               if (this.frame >= end) {
                 complete++
                 output += to
               } else if (this.frame >= start) {
                 if (!char || Math.random() < 0.28) {
                   char = this.randomChar()
                   this.queue[i].char = char
                 }
                 output += `<span class="dud">${char}</span>`
               } else {
                 output += from
               }
             }
             this.el.innerHTML = output
             if (complete === this.queue.length) {
               this.resolve()
             } else {
               this.frameRequest = requestAnimationFrame(this.update)
               this.frame++
             }
           }
           randomChar() {
             return this.chars[Math.floor(Math.random() * this.chars.length)]
           }
         }

         // ——————————————————————————————————————————————————
         // Example
         // ——————————————————————————————————————————————————

         const phrases = [
           'Ruby, Javascript',
           'HTML, CSS',
           'Rails and React.'
         ]

         const el = document.querySelector('.text')
         const fx = new TextScramble(el)

         let counter = 0
         const next = () => {
           fx.setText(phrases[counter]).then(() => {
             setTimeout(next, 800)
           })
           counter = (counter + 1) % phrases.length
         }

         next();

       </script>
    <!-- JS for TextScramble -—>

    <!- JS for smooth scrolling start -->
      <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
      <script type="text/javascript">
      // Select all links with hashes
      $('a[href*="#"]')
        // Remove links that don't actually link to anything
        .not('[href="#"]')
        .not('[href="#0"]')
        .click(function(event) {
          // On-page links
          if (
            location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '')
            &&
            location.hostname == this.hostname
            ) {
            // Figure out element to scroll to
          var target = $(this.hash);
          target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
            // Does a scroll target exist?
            if (target.length) {
              // Only prevent default if animation is actually gonna happen
              event.preventDefault();
              $('html, body').animate({
                scrollTop: target.offset().top
              }, 800 );
            }
          }
        });
      </script>
    <!-- JS for smooth scrolling end -->



    <!-- JS for carousel start -->
      <script>
        $(function(){
          $('.carousel-item').eq(0).addClass('active');
          var total = $('.carousel-item').length;
          var current = 0;
          $('#moveRight').on('click', function(){
            var next=current;
            current= current+1;
            setSlide(next, current);
          });
          $('#moveLeft').on('click', function(){
            var prev=current;
            current = current- 1;
            setSlide(prev, current);
          });
          function setSlide(prev, next){
            var slide= current;
            if(next>total-1){
             slide=0;
             current=0;
           }
           if(next<0){
            slide=total - 1;
            current=total - 1;
          }
          $('.carousel-item').eq(prev).removeClass('active');
          $('.carousel-item').eq(slide).addClass('active');
          setTimeout(function(){
          },800);

          console.log('current '+current);
          console.log('prev '+prev);
        }
      });
      </script>
    <!-- JS for carousel end -->

  </div>
